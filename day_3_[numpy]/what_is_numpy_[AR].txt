مكتبة NumPy (Numerical Python) هي مكتبة مفتوحة المصدر تُستخدم في بايثون لتوفير دعم للعمليات الحسابية والمعالجات العددية، وخاصة تلك المتعلقة بالمصفوفات. تُعد NumPy واحدة من أهم المكتبات في علوم البيانات والتحليل العلمي، وتُستخدم كأساس للعديد من المكتبات الأخرى مثل Pandas وSciPy.

الميزات الرئيسية لمكتبة NumPy:
المصفوفات متعددة الأبعاد (ndarray):

NumPy تقدم نوع بيانات يسمى ndarray (مصفوفة n-dimensional) الذي يُستخدم لتخزين البيانات في شكل جداول من أرقام (أعداد) ثنائية البُعد أو أكثر. هذا النوع من المصفوفات أكثر فعالية وكفاءة مقارنة بالقوائم العادية في بايثون.
العمليات الرياضية على المصفوفات:

توفر NumPy مجموعة واسعة من الوظائف الرياضية التي يمكن تطبيقها مباشرة على المصفوفات، مثل الجمع، الطرح، الضرب، والقسمة على مستوى العناصر.
يمكن أيضًا إجراء عمليات متقدمة مثل الجبر الخطي (مثل الضرب المصفوفي، عكس المصفوفات) وتحليل الـ Fourier.
التعامل مع البيانات ذات الأبعاد العالية:

بفضل قدرتها على التعامل مع المصفوفات متعددة الأبعاد، يمكنك بسهولة التعامل مع البيانات المعقدة مثل الصور أو البيانات متعددة الأبعاد الأخرى.
وظائف عشوائية:

توفر NumPy مولدات للأرقام العشوائية والتي يمكن استخدامها لأغراض متعددة مثل النمذجة والمحاكاة.
تكامل عالي الأداء:

تُكتب بعض أجزاء NumPy بلغة C، مما يجعلها سريعة جدًا مقارنة بالتنفيذات القياسية في بايثون. هذا يجعلها مناسبة للعمليات الحسابية الكثيفة.
مثال عملي:

---
import numpy as np

# إنشاء مصفوفة 1D (أحادية البعد)
arr = np.array([1, 2, 3, 4, 5])
print("1D Array:", arr)

# إنشاء مصفوفة 2D (ثنائية البعد)
arr_2d = np.array([[1, 2, 3], [4, 5, 6]])
print("2D Array:\n", arr_2d)

# جمع 10 لكل عنصر في المصفوفة
arr_plus_10 = arr + 10
print("Array + 10:", arr_plus_10)

# ضرب مصفوفتين
arr_product = arr * arr
print("Element-wise Product:", arr_product)

# إيجاد القيمة العظمى في مصفوفة
max_value = np.max(arr)
print("Max value:", max_value)

---

تطبيقات NumPy:
البيانات العلمية والهندسية: تُستخدم بشكل كبير في التطبيقات التي تتطلب معالجة سريعة وفعالة للبيانات الكبيرة والمعقدة.
الذكاء الاصطناعي: تُستخدم لإنشاء ومعالجة بيانات النماذج الرياضية في التعلم الآلي.
تحليل البيانات: تُستخدم في تحليل البيانات في البحوث العلمية أو التطبيقات العملية التي تتطلب معالجة عددية دقيقة.
NumPy توفر بيئة قوية للتعامل مع البيانات العددية، وهي جزء أساسي من أي مشروع يعتمد على تحليل البيانات أو العمليات الحسابية في بايثون.